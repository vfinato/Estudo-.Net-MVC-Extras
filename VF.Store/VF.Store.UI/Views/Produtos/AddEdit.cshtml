@model VF.Store.UI.Models.Produto

@{
    ViewBag.Title = $"{(Model.Id == 0 ? "Adicionar" : "Editar")} Produto";
}

<h2>@ViewBag.Title</h2>

<form method="post">

    <div class="mb-3">
        <label for="txtNome">Nome:</label>
        @Html.TextBoxFor(m => m.Nome, new { @class = "form-control", autofocus = "" })
        <small>
            @Html.ValidationMessageFor(m => m.Nome, null, new { @class = "text-danger" })
        </small>
    </div>

    <div class="mb-3">
        <label class="form-label">Preço:</label>
        @{ Html.EnableClientValidation(false); }
        @Html.TextBoxFor(m => m.Preco, new { @class = "form-control" })
    <small>
        @{ Html.EnableClientValidation(true); }
        @Html.ValidationMessageFor(m => m.Preco, null, new { @class = "text-danger" })
    </small>
    </div>

    <div class="mb-3">
        <label class="form-label">Tipo:</label>
        @Html.DropDownListFor(m => m.TipoDeProdutoId,
                              new SelectList(ViewBag.Tipos, "Id", "Nome"),
                              "Selecione...",
                   new { @class = "form-control" })
        <small>
            @Html.ValidationMessageFor(m => m.TipoDeProdutoId, null, new { @class = "text-danger" })
        </small>
    </div>

    <div class="mb-3">
        <label class="form-label">Quantidade:</label>
        @Html.TextBoxFor(m => m.Quantidade, new { @class = "form-control" })
        <small>
            @Html.ValidationMessageFor(m => m.Quantidade, null, new { @class = "text-danger" })
        </small>
    </div>
    
    <div>
        @Html.ValidationSummary(true)
    </div>

    <div class="mb-3">
        <button class="btn btn-outline-secondary">Salvar</button>
        <a href="@Url.Action("Index")" class="btn btn-outline-info">Cancelar</a>
    </div>
</form>

@section scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/bootstrap.validate.js"></script>
}
